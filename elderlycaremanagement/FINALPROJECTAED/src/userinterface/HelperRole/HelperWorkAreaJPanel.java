/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HelperRole;

import Business.Doctor.DoctorDirectory;
import Business.Driver.DriverDirectory;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Helper.HelperDirectory;
import Business.Network.Network;
import Business.Org.HelperOrganization;

import Business.Org.Org;
import Business.Org.OrganizationDirectory;
import Business.Pharmacy.PharmacyDirectory;

import Business.UserAccount.UserAccount;
import Business.WorkQueue.HelperWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author grees
 */
public class HelperWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;

    private UserAccount userAccount;
   // private UserAccount userAccount;  
    private OrganizationDirectory od;
    private HelperOrganization horg;
    EcoSystem business;
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public HelperWorkAreaJPanel(JPanel userProcessContainer, 
         UserAccount userAccount,  
            EcoSystem business, Org organization, Enterprise enterprise, Network network) {
        initComponents();
        this.userAccount = userAccount;
        this.od = od;
         this.horg = (HelperOrganization)organization;
         this.business =business;
         populateRequestTable();
    }
    
    public void populateRequestTable(){
       
           DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy"); 
        model.setRowCount(0);
       // if(!dorg.getWorkQueue().getWorkRequestList().isEmpty())
        //{
        for(WorkRequest request : business.getWorkQueue().getWorkRequestList()){
              if(request instanceof HelperWorkRequest){ 
                 if(((HelperWorkRequest) request).getProf().equalsIgnoreCase(business.getHelperDirectory().getHelper(userAccount.getEmployee().getName()).getProfession())){
                     // business.getHelperDirectory().getHelper(
                 // ecoSystem.getPersonDirectory().getPerson(account.getEmployee().getName());
            Object[] row = new Object[5];
            //row[0] = request;
           row[0] = ((HelperWorkRequest) request).getPname();
            //row[1] = 
            row[1] = ((HelperWorkRequest) request).getAdd();
            row[2] =((HelperWorkRequest) request).getDate();
            row[3] = ((HelperWorkRequest) request).getPrice();
            row[4]  = ((HelperWorkRequest) request);
            //row[3] = request.
            model.addRow(row);
                 }
        }
        }
        //}
        
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        acceptButton = new javax.swing.JButton();
        processButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 204));
        jLabel1.setText("Helper Work Area");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 35, 396, 53));

        acceptButton.setBackground(new java.awt.Color(0, 102, 204));
        acceptButton.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        acceptButton.setForeground(new java.awt.Color(255, 255, 255));
        acceptButton.setText("Accept");
        acceptButton.setBorderPainted(false);
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });
        add(acceptButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(352, 337, -1, -1));

        processButton.setBackground(new java.awt.Color(0, 102, 204));
        processButton.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        processButton.setForeground(new java.awt.Color(255, 255, 255));
        processButton.setText("Completed");
        processButton.setBorderPainted(false);
        processButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processButtonActionPerformed(evt);
            }
        });
        add(processButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 340, -1, -1));

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "person name", "address", "date", "price", "status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(0).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 138, 579, 153));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/handyMan.jpg"))); // NOI18N
        jLabel3.setText("jLabel3");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 0, 1080, 1060));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/d1.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -30, 1710, 990));
    }// </editor-fold>//GEN-END:initComponents

    private void processButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        HelperWorkRequest ntwr = (HelperWorkRequest)workRequestJTable.getValueAt(selectedRow, 4);
        if(ntwr.getReceiver() == null)
        {
            JOptionPane.showMessageDialog(null, "Please accept the ride first", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(ntwr.getHstatus().equalsIgnoreCase("Request Completed"))
        {
            JOptionPane.showMessageDialog(null, "Request has already been completed!", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(ntwr.getHstatus().equalsIgnoreCase("HandyMan Accepted"))
        {
            ntwr.setHstatus("Request Completed");
            populateRequestTable();
            /* if(ntwr.getReceiver()!=userAccount)
            {
                JOptionPane.showMessageDialog(null, "Request has been processed earlier!", "warning", JOptionPane.WARNING_MESSAGE);
                return;
            } */
        }
    }//GEN-LAST:event_processButtonActionPerformed

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 3);
        HelperWorkRequest request = (HelperWorkRequest) workRequestJTable.getValueAt(selectedRow, 4);
        if(request.getReceiver()!=null)
        {
            //JOptionPane.showMessageDialog(null, "Request has been processed earlier!", "warning", JOptionPane.WARNING_MESSAGE);
            //return;
        }
        if(request.getHstatus().equalsIgnoreCase("HandyMan Accepted")){
            JOptionPane.showMessageDialog(null, "Already accepted");
        }
        request.setReceiver(userAccount);
        request.setHstatus("HandyMan Accepted");
        populateRequestTable();
    }//GEN-LAST:event_acceptButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
