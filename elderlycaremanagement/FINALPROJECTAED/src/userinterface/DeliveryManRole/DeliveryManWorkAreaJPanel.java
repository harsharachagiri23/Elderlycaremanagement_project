/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DeliveryManRole;

import Business.DeliveryMan.DeliveryManDirectory;
import Business.EcoSystem;
import Business.GroceryOrder.GOrder;
import Business.GroceryOrder.GOrderDirectory;
import Business.PharmacyOrder.POrder;
import Business.PharmacyOrder.POrderDirectory;

import Business.UserAccount.UserAccount;
import Business.WorkQueue.DoctorWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class DeliveryManWorkAreaJPanel extends javax.swing.JPanel {

  private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
     private DeliveryManDirectory deliveryManDirectory;
    private GOrderDirectory gorderDirectory;
    private POrderDirectory porderDirectory;
    
    
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public DeliveryManWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem business) {
        initComponents();
        
       this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
         this.gorderDirectory = business.getgOrderDirectory();
         this.porderDirectory = business.getpOrderDirectory();
        this.deliveryManDirectory = business.getDeliverymanDirectory();
      
        
        populateTable();
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable1.getModel();
        model.setRowCount(0);
         ArrayList<WorkRequest> allOrders = new ArrayList<WorkRequest>();
        for(POrder porder : business.getpOrderDirectory().getOrderDirectory()) {
        allOrders.add(porder);
        }
        for(GOrder gorder : business.getgOrderDirectory().getOrderDirectory()) {
        allOrders.add(gorder);
        }
        
        for(WorkRequest order: allOrders){
            Object[] row = new Object[5];
        //for(int i = 0; i < allOrders.size(); i++){
        if(order instanceof POrder){
            POrder porder = (POrder)order;
           if( porder.getOrderStatus() != null && (porder.getOrderStatus().equals("Order Ready for Pick up")
                   || porder.getOrderStatus().equals("Order Picked up") || porder.getOrderStatus().equals("Delivered"))){
        //POrder porder = (POrder)order;   
        row[0] = ((POrder) order);
        row[1] = ((POrder) order).getOrderStatus();
        row[2] = ((POrder) order).getPerson().getName();
        row[3] = ((POrder) order).getPerson().getAddress();
        row[4] = ((POrder) order).getPharmacy().getPharmName();
        model.addRow(row);
           }
        }
        else{
                GOrder gorder = (GOrder)order;
            if( gorder.getOrderStatus() != null && (gorder.getOrderStatus().equals("Order Ready for Pick up")
                   || gorder.getOrderStatus().equals("Order Picked up") || gorder.getOrderStatus().equals("Delivered"))){   
            row[0] = ((GOrder) order);
            row[1] = ((GOrder) order).getOrderStatus();
            row[2] = ((GOrder) order).getPerson().getName();
            row[3] = ((GOrder) order).getPerson().getAddress();
            row[4] = ((GOrder) order).getGrocer().getGrocerName();
            model.addRow(row);
        }
          
        }
        
        }
       // for(GOrder order : business.getgOrderDirectory().getOrderDirectory()) {}
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        assignJButton = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        workRequestJTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        assignJButton.setBackground(new java.awt.Color(0, 102, 204));
        assignJButton.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        assignJButton.setForeground(new java.awt.Color(255, 255, 255));
        assignJButton.setText("Assign to me");
        assignJButton.setBorderPainted(false);
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 410, -1, -1));

        processJButton.setBackground(new java.awt.Color(0, 102, 204));
        processJButton.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        processJButton.setForeground(new java.awt.Color(255, 255, 255));
        processJButton.setText("Process");
        processJButton.setBorderPainted(false);
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        add(processJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 410, -1, -1));

        refreshJButton.setBackground(new java.awt.Color(0, 102, 204));
        refreshJButton.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        refreshJButton.setForeground(new java.awt.Color(255, 255, 255));
        refreshJButton.setText("Refresh");
        refreshJButton.setBorderPainted(false);
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 220, -1, -1));

        workRequestJTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Status", "Customer", "Customer Address", "Store"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(workRequestJTable1);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, 570, 120));

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 204));
        jLabel1.setText("DeliveryMan Work Area");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 70, -1, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delman-removebg-preview.png"))); // NOI18N
        jLabel7.setText("jLabel3");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 120, 560, 570));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/d1.png"))); // NOI18N
        jLabel8.setText("jLabel2");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 1760, 1000));
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = workRequestJTable1.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a order to assign");
            return;
        }
        
        WorkRequest request = (WorkRequest)workRequestJTable1.getValueAt(selectedRow, 0);
        if(request instanceof POrder){
            if(((POrder) request).getOrderStatus().equalsIgnoreCase("Order Picked up")){
            JOptionPane.showMessageDialog(null, "Order already picked up");
            return;
            }
            if(((POrder) request).getOrderStatus().equalsIgnoreCase("Delivered")){
            JOptionPane.showMessageDialog(null, "Cannot assign a delivered order");
            return;
            }            
        ((POrder) request).setOrderStatus("Order Picked up");
        }
        else{
            if(((GOrder) request).getOrderStatus().equalsIgnoreCase("Delivered")){
            JOptionPane.showMessageDialog(null, "Cannot assign a delivered order");
            return;
            }  
            if(((GOrder) request).getOrderStatus().equalsIgnoreCase("Order Picked up")){
            JOptionPane.showMessageDialog(null, "Order already picked up");
            return;
            }  
        ((GOrder) request).setOrderStatus("Order Picked up");
        }
        request.setReceiver(userAccount);
        //request.set
        populateTable();
//        Order order = (Order) workRequestJTable.getValueAt(selectedRow,0);
//        order.setDeliveryMan(userAccount.getEmployee().getName());
//        order.setOrderStatus("Order Picked up");
//        populateTable();
//        populateDeliveryManTable();
        
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed
        
        int selectedRow = workRequestJTable1.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a order to deliver");
            return;
        }
        WorkRequest request = (WorkRequest)workRequestJTable1.getValueAt(selectedRow, 0);
        //if(request){        
        if(request instanceof POrder){
            if(((POrder) request).getOrderStatus().equalsIgnoreCase("Delivered")){
            JOptionPane.showMessageDialog(null, "Order already delivered");
            return;
            }
            if(((POrder) request).getOrderStatus().equalsIgnoreCase("Order Ready for Pick up")){
            JOptionPane.showMessageDialog(null, "Please assign the order first");
            return;
            }
        ((POrder) request).setOrderStatus("Delivered");
        }
        else{
            if(((GOrder) request).getOrderStatus().equalsIgnoreCase("Delivered")){
            JOptionPane.showMessageDialog(null, "Order already delivered");
            return;
            }
            if(((GOrder) request).getOrderStatus().equalsIgnoreCase("Order Ready for Pick up")){
            JOptionPane.showMessageDialog(null, "Please assign the order first");
            return;
            }
        ((GOrder) request).setOrderStatus("Delivered");
        }
        request.setReceiver(userAccount);
        //request.set
        populateTable();
      //  } 
    }//GEN-LAST:event_processJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton processJButton;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTable workRequestJTable1;
    // End of variables declaration//GEN-END:variables
}
