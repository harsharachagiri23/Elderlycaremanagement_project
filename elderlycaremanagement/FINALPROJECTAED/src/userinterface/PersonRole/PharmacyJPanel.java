/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PersonRole;


import Business.DeliveryMan.DeliveryManDirectory;
import Business.EcoSystem;
import Business.Person.Person;
import Business.Person.PersonDirectory;
import Business.Pharmacy.Pharmacy;
import Business.Pharmacy.PharmacyDirectory;
import Business.PharmacyMenu.PMenu;
import Business.PharmacyMenu.PMenuDirectory;
import Business.PharmacyOrder.POrder;
import Business.PharmacyOrder.POrderDirectory;

import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.SystemAdminWorkArea.managePharmacy;

/**
 *
 * @author grees
 */
public class PharmacyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PharmacyJPanel
     */
       private JPanel userProcessContainer;
    private EcoSystem ecoSystem;
    private UserAccount account;
    private PersonDirectory personDirectory;
    private PharmacyDirectory pharmacyDirectory;
   
    private DeliveryManDirectory deliveryManDirectory;
    private PMenuDirectory pmenuDirectory;
    private POrderDirectory porderDirectory;
    private static int count = 1;
    public PharmacyJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecoSystem, 
            PersonDirectory personDirectory, PharmacyDirectory pharmacyDirectory, 
            DeliveryManDirectory deliveryManDirectory, PMenuDirectory pmenuDirectory, POrderDirectory porderDirectory) {
        initComponents();
        
           this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.ecoSystem = ecoSystem;
        this.personDirectory = ecoSystem.getPersonDirectory();
        this.pharmacyDirectory = ecoSystem.getPharmacyDirectory();
        this.pmenuDirectory = ecoSystem.getpMenuDirectory();
        this.deliveryManDirectory = ecoSystem.getDeliverymanDirectory();
        this.porderDirectory = ecoSystem.getpOrderDirectory();
        //valueLabel.setText(account.getUsername());
        //populateRequestTable();
        populateRestaurantCombo();
        //valueLabel.setText(enterprise.getName());
        populateRequestTable();
    }

    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        model.setRowCount(0);
       //SimpleDateFormat strDate = new SimpleDateFormat("MM/dd/yyyy");
       System.out.println("ecoSystem" + this.ecoSystem);
        for (POrder order : this.ecoSystem.getpOrderDirectory().getOrderDirectory()){
            System.out.println("Order" + order.getOrderId());
            if(account.getEmployee().getName().equals(order.getPerson().getName())) {
                Object[] row = new Object[7];
                row[0] = order;
                row[1] = order.getMenu().getItemName();
                row[2] = order.getQuantity() * order.getMenu().getPrice();
                row[3] = order.getPharmacy().getPharmName();
                row[4] = order.getPerson().getName();
                row[5] = order.getOrderStatus();
                row[6] = order.getQuantity();
              //  row[7] = order.getTime().toString();
                model.addRow(row);
    }
        }
    }
    
      public void populateRestaurantCombo() {
        selectComboBox.removeAllItems();
        selectComboBox.addItem("  ");
        for(Pharmacy res : ecoSystem.getPharmacyDirectory().getPharmacyDirectory()) {
            System.out.println("res" + res);
            selectComboBox.addItem(res.getPharmName());
        }
    }
      
       public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) jtable1.getModel();
        dtm.setRowCount(0);
        String pharmName = selectComboBox.getSelectedItem().toString();
        Pharmacy pharmacy = ecoSystem.getPharmacyDirectory().getPharmacy(pharmName);
        for(PMenu pmenu : ecoSystem.getpMenuDirectory().getPmenuDirectory()){
            if(pharmacy.getPharmName().equals(pmenu.getPharmaName())) {
                Object [] row = new Object[2];
                row[0] = pmenu;
                row[1] = pmenu.getPrice();
                dtm.addRow(row);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        selectComboBox = new javax.swing.JComboBox<>();
        MenuButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        QuanText = new javax.swing.JTextField();
        OrderButton = new javax.swing.JButton();
        enterpriseLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        BackButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 204));
        jLabel1.setText("Pharmacy");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(387, 30, -1, -1));

        selectComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Pharmacy" }));
        selectComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectComboBoxActionPerformed(evt);
            }
        });
        add(selectComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 140, 130, -1));

        MenuButton.setBackground(new java.awt.Color(0, 102, 204));
        MenuButton.setForeground(new java.awt.Color(255, 255, 255));
        MenuButton.setText("Display Menu");
        MenuButton.setBorderPainted(false);
        MenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuButtonActionPerformed(evt);
            }
        });
        add(MenuButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 140, -1, -1));

        jtable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Medicine", "Price"
            }
        ));
        jScrollPane2.setViewportView(jtable1);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(67, 231, 218, 90));

        jLabel2.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 204));
        jLabel2.setText("Select Quantity");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 231, 110, -1));
        add(QuanText, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 263, 89, -1));

        OrderButton.setBackground(new java.awt.Color(0, 102, 204));
        OrderButton.setForeground(new java.awt.Color(255, 255, 255));
        OrderButton.setText("Place Order");
        OrderButton.setBorderPainted(false);
        OrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderButtonActionPerformed(evt);
            }
        });
        add(OrderButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 301, -1, -1));

        enterpriseLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel2.setForeground(new java.awt.Color(0, 102, 204));
        enterpriseLabel2.setText("Order details:");
        add(enterpriseLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(67, 383, 127, 30));

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "MedicineName", "Price", "Pharmacy", "Customer", "Status", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(67, 457, 780, 91));

        BackButton.setBackground(new java.awt.Color(255, 255, 255));
        BackButton.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        BackButton.setForeground(new java.awt.Color(0, 102, 204));
        BackButton.setText("<< BACK");
        BackButton.setBorderPainted(false);
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });
        add(BackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(67, 604, -1, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pharm_usr-removebg-preview.png"))); // NOI18N
        jLabel7.setText("jLabel3");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 60, 500, 470));

        jLabel4.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 204));
        jLabel4.setText("Select Pharmacy");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, -1, 20));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/d1.png"))); // NOI18N
        jLabel8.setText("jLabel2");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -60, 1710, 1000));

        jLabel3.setText("jLabel3");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void selectComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectComboBoxActionPerformed

    private void MenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuButtonActionPerformed
        // TODO add your handling code here:
         if(selectComboBox.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Please select a restaurant");
            return;
        }
        populateTable();
      
    }//GEN-LAST:event_MenuButtonActionPerformed

    private void OrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = jtable1.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please Select a row", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(QuanText.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null,"Please enter quantity", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int quantity = Integer.parseInt(QuanText.getText());
        String pharmName = selectComboBox.getSelectedItem().toString();
        Pharmacy pharmacy = ecoSystem.getPharmacyDirectory().getPharmacy(pharmName);
        Person person = ecoSystem.getPersonDirectory().getPerson(account.getEmployee().getName());
        PMenu menu = (PMenu) jtable1.getValueAt(selectedRow, 0);
        String status = "Order Placed";
        
        POrder order = ecoSystem.getpOrderDirectory().newOrder();
        order.setPerson(person);
        int min = 1000;  
        int max = 5000; 
        int orderIdGen = (int)(Math.random()*(max-min+1)+min);
        order.setOrderId(String.valueOf(orderIdGen));
        order.setQuantity(quantity);
        order.setMenu(menu);
        order.setPharmacy(pharmacy);
        order.setOrderStatus(status);
        order.setAllot(false);
        
        JOptionPane.showMessageDialog(null,"You have placed an order");
        populateRequestTable();
    }//GEN-LAST:event_OrderButtonActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
            userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PersonAreaJPanel a = (PersonAreaJPanel) component;
        //a.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_BackButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton MenuButton;
    private javax.swing.JButton OrderButton;
    private javax.swing.JTextField QuanText;
    private javax.swing.JLabel enterpriseLabel2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jtable1;
    private javax.swing.JComboBox<String> selectComboBox;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
