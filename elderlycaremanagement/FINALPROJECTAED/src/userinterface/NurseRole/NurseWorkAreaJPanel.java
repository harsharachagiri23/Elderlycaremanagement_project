

package userinterface.NurseRole;


import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Org.DriverOrganization;
import Business.Org.NursingOrganization;
import Business.Org.Org;
import Business.Org.OrganizationDirectory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DriverWorkRequest;
import Business.WorkQueue.NurseWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  grees
 */
public class NurseWorkAreaJPanel extends javax.swing.JPanel {
    
    JPanel userProcessContainer;
 
   private UserAccount userAccount;  
    private OrganizationDirectory od;
    private NursingOrganization norg;
    EcoSystem business;
    
    /** Creates new form AdminWorkAreaJPanel */
    public NurseWorkAreaJPanel(JPanel userProcessContainer, 
         UserAccount userAccount,  
            EcoSystem business, Org organization, Enterprise enterprise, Network network) {
        initComponents();
        this.userAccount = userAccount;
        this.od = od;
         this.norg = (NursingOrganization)organization;
         this.business =business;
         populateRequestTable();
      
        //valueLabel.setText();
    }
    
    public void populateRequestTable()
    {
        DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy"); 
        model.setRowCount(0);
       // if(!dorg.getWorkQueue().getWorkRequestList().isEmpty())
        //{
        for(WorkRequest request : business.getWorkQueue().getWorkRequestList()){
              if(request instanceof NurseWorkRequest){ 
            Object[] row = new Object[5];
            //row[0] = request;
            row[0] = ((NurseWorkRequest) request).getPerson().getName();
            //row[1] = 
            row[1] = ((NurseWorkRequest) request).getPerson().getAddress();
            row[2] =((NurseWorkRequest) request).getDate();
            row[3] = ((NurseWorkRequest) request).getDays();
            row[4]  = ((NurseWorkRequest) request);
            //row[3] = request.
            model.addRow(row);
        }
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        acceptButton = new javax.swing.JButton();
        processButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 204));
        jLabel1.setText("Nurse Work Area");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 50, 400, -1));

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "person name", "Address", "Date", "No. of Days", "status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 140, 670, 110));

        acceptButton.setBackground(new java.awt.Color(0, 102, 204));
        acceptButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        acceptButton.setForeground(new java.awt.Color(255, 255, 255));
        acceptButton.setText("Accept");
        acceptButton.setBorderPainted(false);
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });
        add(acceptButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 280, 140, -1));

        processButton.setBackground(new java.awt.Color(0, 102, 204));
        processButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        processButton.setForeground(new java.awt.Color(255, 255, 255));
        processButton.setText("Completed");
        processButton.setBorderPainted(false);
        processButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processButtonActionPerformed(evt);
            }
        });
        add(processButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 280, 160, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nurse_wa-removebg-preview.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 310, 600, 470));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/d1.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -30, 1780, 990));
    }// </editor-fold>//GEN-END:initComponents

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 3);
        NurseWorkRequest request = (NurseWorkRequest) workRequestJTable.getValueAt(selectedRow, 4);
        if(request.getReceiver()!=null)
        {
            //JOptionPane.showMessageDialog(null, "Request has been processed earlier!", "warning", JOptionPane.WARNING_MESSAGE);
            //return;
        }
        if(request.getNstatus().equalsIgnoreCase("Nurse Accepted")){
            JOptionPane.showMessageDialog(null, "Already accepted");
        }
        request.setReceiver(userAccount);
        request.setNstatus("Nurse Accepted");
        populateRequestTable();
    }//GEN-LAST:event_acceptButtonActionPerformed

    private void processButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        NurseWorkRequest ntwr = (NurseWorkRequest)workRequestJTable.getValueAt(selectedRow, 4);
        if(ntwr.getReceiver() == null)
        {
            JOptionPane.showMessageDialog(null, "Please accept the ride first", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(ntwr.getNstatus().equalsIgnoreCase("Request Completed"))
        {
            JOptionPane.showMessageDialog(null, "Request has already been completed!", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(ntwr.getNstatus().equalsIgnoreCase("Nurse Accepted"))
        {
            ntwr.setNstatus("Request Completed");
            populateRequestTable();
            /* if(ntwr.getReceiver()!=userAccount)
            {
                JOptionPane.showMessageDialog(null, "Request has been processed earlier!", "warning", JOptionPane.WARNING_MESSAGE);
                return;
            } */
        }

    }//GEN-LAST:event_processButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
    
}
