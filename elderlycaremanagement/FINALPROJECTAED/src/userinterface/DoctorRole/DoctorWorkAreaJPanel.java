/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.DoctorRole;

import Business.Doctor.Doctor;
import Business.Doctor.DoctorDirectory;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Org.DoctorOrganization;
import Business.Org.DriverOrganization;
import Business.Org.Org;
import Business.Org.OrganizationDirectory;
import Business.Person.Person;
import Business.Pharmacy.Pharmacy;
import Business.PharmacyMenu.PMenu;
import Business.PharmacyOrder.POrder;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DoctorWorkRequest;
import Business.WorkQueue.DriverWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harshavardhani
 */
public class DoctorWorkAreaJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
     private OrganizationDirectory od;
    private DoctorOrganization docorg;
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public DoctorWorkAreaJPanel(JPanel userProcessContainer, 
         UserAccount userAccount,  
            EcoSystem business, Org organization, Enterprise enterprise, Network network) {
        initComponents();
        this.userAccount = userAccount;
        this.od = od;
         this.docorg = (DoctorOrganization)organization;
         this.business =business;
         populateRequestTable();
         populatePatientCombo();
         populatePrescription();
    }
    public void populateRequestTable()
    {
        DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy"); 
        model.setRowCount(0);       
        for(WorkRequest request : business.getWorkQueue().getWorkRequestList()){
              if(request instanceof DoctorWorkRequest){
                  if(userAccount.getEmployee().getName().equalsIgnoreCase(((DoctorWorkRequest) request).getSpec())){
                    Object[] row = new Object[4];
                    row[0] = ((DoctorWorkRequest) request).getPerson().getName();
                    row[1] = ((DoctorWorkRequest) request).getDate();
                    row[2] = ((DoctorWorkRequest) request).getTime();
                    row[3] = ((DoctorWorkRequest) request);
                    model.addRow(row);
              }
        }
        }
    }
    public void populatePatientCombo(){
        comboPatient.removeAllItems();
         for(WorkRequest request : business.getWorkQueue().getWorkRequestList()){
              if(request instanceof DoctorWorkRequest){ 
                  if(userAccount.getEmployee().getName().equalsIgnoreCase(((DoctorWorkRequest) request).getSpec())){
                  if(((DoctorWorkRequest) request).getDocstatus().equalsIgnoreCase("Request Accepted"))
                  {
                    comboPatient.addItem(((DoctorWorkRequest) request).getPerson().getName());       
                  }
                  }
                  
              }}
    
    }
    public void populatePrescription(){
    DefaultTableModel model = (DefaultTableModel) tblMedOrder.getModel();
        model.setRowCount(0);
        for (POrder porder : this.business.getpOrderDirectory().getOrderDirectory()){
        //System.out.println("Order" + porder.getOrderId());
        try {
        if(userAccount.getEmployee().getName().equals(porder.getDoctor().getName())) {
            Object[] row = new Object[7];
            row[0] = porder;
            row[2] = porder.getMenu().getItemName();
            row[4] = porder.getQuantity() * porder.getMenu().getPrice();
            row[5] = porder.getPharmacy().getPharmName();
            row[1] = porder.getPerson().getName();
            row[6] = porder.getOrderStatus();
            row[3] = porder.getQuantity();
          //  row[7] = order.getTime().toString();
            model.addRow(row);
    }
        }
        catch (Exception e) {
            //System.out.println(e.toString());
        }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        acceptButton = new javax.swing.JButton();
        processButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMedOrder = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        comboPharma = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        comboMedicine = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        comboPatient = new javax.swing.JComboBox<>();
        spinNumTimes = new com.toedter.components.JSpinField();
        spinNumDays = new com.toedter.components.JSpinField();
        btnOrderMed = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 204));
        jLabel1.setText("Doctor Work Area");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 30, -1, -1));

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Schedule Time", "Schedule Date", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 170, 873, 100));

        acceptButton.setBackground(new java.awt.Color(0, 102, 204));
        acceptButton.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        acceptButton.setForeground(new java.awt.Color(255, 255, 255));
        acceptButton.setText("Accept Patient");
        acceptButton.setBorderPainted(false);
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });
        jPanel1.add(acceptButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 306, -1, -1));

        processButton.setBackground(new java.awt.Color(0, 102, 204));
        processButton.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        processButton.setForeground(new java.awt.Color(255, 255, 255));
        processButton.setText("Completed");
        processButton.setBorderPainted(false);
        processButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processButtonActionPerformed(evt);
            }
        });
        jPanel1.add(processButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 769, -1, -1));

        tblMedOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Id", "Patient", "Medicine", "Quantity", "Price", "Pharmacy", "Status"
            }
        ));
        jScrollPane2.setViewportView(tblMedOrder);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 580, 902, 143));

        jLabel2.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 204));
        jLabel2.setText("Accepted Patient:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 460, -1, 20));

        jLabel4.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 204));
        jLabel4.setText("Select Pharmacy:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 464, -1, 20));

        comboPharma.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboPharmaItemStateChanged(evt);
            }
        });
        comboPharma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPharmaActionPerformed(evt);
            }
        });
        jPanel1.add(comboPharma, new org.netbeans.lib.awtextra.AbsoluteConstraints(338, 463, 99, -1));

        jLabel5.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 204));
        jLabel5.setText("Select Medicine:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 460, -1, 20));

        jPanel1.add(comboMedicine, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 460, 80, -1));

        jLabel6.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 204));
        jLabel6.setText("Dosage");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 460, -1, 20));

        jLabel7.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 204));
        jLabel7.setText("Times/Day:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 460, -1, 20));

        jLabel8.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 204));
        jLabel8.setText("Number of Days:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 460, -1, 20));

        comboPatient.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboPatientItemStateChanged(evt);
            }
        });
        jPanel1.add(comboPatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 463, 90, -1));

        spinNumTimes.setToolTipText("");
        spinNumTimes.setMaximum(10);
        spinNumTimes.setMinimum(1);
        spinNumTimes.setValue(1);
        jPanel1.add(spinNumTimes, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 460, 38, -1));

        spinNumDays.setMaximum(30);
        spinNumDays.setMinimum(1);
        spinNumDays.setValue(1);
        jPanel1.add(spinNumDays, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 460, 38, -1));

        btnOrderMed.setBackground(new java.awt.Color(0, 102, 204));
        btnOrderMed.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnOrderMed.setForeground(new java.awt.Color(255, 255, 255));
        btnOrderMed.setText("Order Medicine");
        btnOrderMed.setBorderPainted(false);
        btnOrderMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderMedActionPerformed(evt);
            }
        });
        jPanel1.add(btnOrderMed, new org.netbeans.lib.awtextra.AbsoluteConstraints(427, 523, -1, -1));

        jLabel3.setBackground(new java.awt.Color(0, 102, 204));
        jLabel3.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/d1.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, -100, 1780, 1130));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnOrderMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderMedActionPerformed
        // TODO add your handling code here:
        int patientCount = comboPatient.getItemCount();
        if(patientCount != 0){
        try{
            int quantity = spinNumTimes.getValue() * spinNumDays.getValue();
            PMenu menu = (PMenu) business.getpMenuDirectory().getMenu(comboMedicine.getSelectedItem().toString());
            Pharmacy pharmacy = (Pharmacy)business.getPharmacyDirectory().getPharmacy(comboPharma.getSelectedItem().toString());

            POrder order = business.getpOrderDirectory().newOrder();
            String status = "Order Placed";
            order.setPerson(business.getPersonDirectory().getPerson((String) comboPatient.getSelectedItem()));
            int min = 1000;
            int max = 5000;
            int orderIdGen = (int)(Math.random()*(max-min+1)+min);
            order.setOrderId(String.valueOf(orderIdGen));
            order.setQuantity(quantity);
            order.setMenu(menu);
            //order.getMenu().setItemName(comboMedicine.getSelectedItem().toString());
            order.setPharmacy(pharmacy);
            //order.getPharmacy().setPharmName(comboPharma.getSelectedItem().toString());
            order.setOrderStatus(status);
            order.setAllot(false);
            order.setDoctor(business.getDoctorDirectory().getDoctor(userAccount.getEmployee().getName()));
            populatePrescription();
        }catch(Exception e){
        
        }
        }
        else {
        JOptionPane.showMessageDialog(null, "Accept a patient first to order medicine");
        }
    }//GEN-LAST:event_btnOrderMedActionPerformed

    private void comboPatientItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboPatientItemStateChanged
        // TODO add your handling code here:
        System.out.println("combo patient Triggered");
        populatePharmaCombo();
    }//GEN-LAST:event_comboPatientItemStateChanged

    private void comboPharmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPharmaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboPharmaActionPerformed

    private void comboPharmaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboPharmaItemStateChanged
        // TODO add your handling code here:
        System.out.println("combo pharma Triggered");
        populateMedCombo();
    }//GEN-LAST:event_comboPharmaItemStateChanged

    private void processButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processButtonActionPerformed
        // TODO add your handling code here:
        try{
            int selectedRow = workRequestJTable.getSelectedRow();

            if (selectedRow < 0){
                JOptionPane.showMessageDialog(null, "Please select a row", "warning", JOptionPane.WARNING_MESSAGE);
                return;
            }

            DoctorWorkRequest request = (DoctorWorkRequest) workRequestJTable.getValueAt(selectedRow, 3);
            if(request.getReceiver()!=null)
            {
                //JOptionPane.showMessageDialog(null, "Request has been processed earlier!", "warning", JOptionPane.WARNING_MESSAGE);
                //return;
            }
            if(request.getDocstatus().equalsIgnoreCase("Appointment Completed")){
                JOptionPane.showMessageDialog(null, "Already completed");
                //return;
            }
            if(request.getDocstatus().equalsIgnoreCase("Doctor Requested")){
                JOptionPane.showMessageDialog(null, "Accept the patient first");
                return;
            }
            request.setReceiver(userAccount);
            request.setDocstatus("Appointment Completed");
            populateRequestTable();
            populatePatientCombo();
        }catch(Exception e){
        }
    }//GEN-LAST:event_processButtonActionPerformed

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 3);
        DoctorWorkRequest request = (DoctorWorkRequest) workRequestJTable.getValueAt(selectedRow, 3);
        if(request.getReceiver()!=null)
        {
            //JOptionPane.showMessageDialog(null, "Request has been processed earlier!", "warning", JOptionPane.WARNING_MESSAGE);
            //return;
        }
        if(request.getDocstatus().equalsIgnoreCase("Appointment Completed")){
            JOptionPane.showMessageDialog(null, "Patient appointment already completed");
            return;
        }
        if(request.getDocstatus().equalsIgnoreCase("Request Accepted")){
            JOptionPane.showMessageDialog(null, "Patient already accepted. You can prescribe medicine or complete the appointment");
            //return;
        }
        request.setReceiver(userAccount);
        request.setDocstatus("Request Accepted");
        populateRequestTable();
        populatePatientCombo();
        //populatePharmaCombo();
    }//GEN-LAST:event_acceptButtonActionPerformed
    public void populatePharmaCombo(){
        comboPharma.removeAllItems();
        int patientCount = comboPatient.getItemCount();
        if(patientCount != 0){
        for(Pharmacy ph: business.getPharmacyDirectory().getPharmacyDirectory()){
        comboPharma.addItem(ph.getPharmName());
        }
        }
}
    public void populateMedCombo(){
        comboMedicine.removeAllItems();
        int patientCount = comboPatient.getItemCount();
        if(patientCount != 0){
       try {
        String pharma = comboPharma.getSelectedItem().toString();  //pharmacy
        if(pharma != null){ 
        for(PMenu pmenu: business.getpMenuDirectory().getPmenuDirectory()){
            if(pharma.equalsIgnoreCase(pmenu.getPharmaName())){
        comboMedicine.addItem(pmenu.toString());
            }
        }
        }
    }catch (Exception e) {
        comboMedicine.removeAllItems();
            //System.out.println(e.toString());
        }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JButton btnOrderMed;
    private javax.swing.JComboBox<String> comboMedicine;
    private javax.swing.JComboBox<String> comboPatient;
    private javax.swing.JComboBox<String> comboPharma;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton processButton;
    private com.toedter.components.JSpinField spinNumDays;
    private com.toedter.components.JSpinField spinNumTimes;
    private javax.swing.JTable tblMedOrder;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
